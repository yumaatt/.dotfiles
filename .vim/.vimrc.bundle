"vunlde.vimで管理してるpluginを読み込む

if has('vim_starting')
  set runtimepath+=~/.dotfiles/.vim/bundle/neobundle.vim/
endif

call neobundle#begin(expand('~/.dotfiles/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
NeoBundleFetch 'Shougo/neobundle.vim'

" My Bundles here:
" http://qiita.com/okamos/items/caf5a0b19ce893a75363
" Unite
" vim scriptで実装されたanythingプラグイン
NeoBundle 'Shougo/unite.vim'
NeoBundle 'tsukkee/unite-help'
NeoBundle 'h1mesuke/unite-outline'
" NeoBundle 'Sixeight/unite-grep'
" NeoBundle 'basyura/unite-rails'
NeoBundle 'thinca/vim-unite-history'
NeoBundle 'tsukkee/unite-tag'
NeoBundle 'choplin/unite-vim_hacks'
NeoBundle 'Shougo/neomru.vim'

" vimproc
NeoBundle 'Shougo/vimproc.vim',  {
      \ 'build' : {
      \     'windows' : 'tools\\update-dll-mingw',
      \     'cygwin' : 'make -f make_cygwin.mak',
      \     'mac' : 'make',
      \     'linux' : 'make',
      \     'unix' : 'gmake',
      \    },
      \ }

" Completion
" 補完 autocomplpop.vim : insertmodeで自動で補完をpopup
" NeoBundle 'AutoComplPop'

" 補完 neocomplcache.vim : 究極のVim的補完環境
NeoBundle 'Shougo/neocomplcache'

" neocomplcacheのsinpet補完
" NeoBundle 'Shougo/neosnippet.git'
" NeoBundle "Shougo/neosnippet-snippets"
NeoBundleLazy 'Shougo/neosnippet',  {
  \ 'depends' : 'Shougo/neosnippet-snippets',
  \ 'autoload' : {
  \   'insert' : 1,
  \   'filetypes' : 'snippet',
  \ }}
NeoBundle 'Shougo/neosnippet-snippets'


" various langueages snippets
NeoBundle 'honza/vim-snippets'

" for rsense
" NeoBundle 'm2ym/rsense'
" NeoBundle 'taichouchou2/vim-rsense'

" rubyでrequire先を補完する
" NeoBundle 'ujihisa/neco-ruby'

" A neocomplcache plugin for English, using look command
" NeoBundle 'ujihisa/neco-look'

" ステータスライン編集
"NeoBundle 'Lokaltog/vim-powerline'
NeoBundle 'powerline/powerline'

" vim からシェルを使う
NeoBundleLazy 'Shougo/vimshell',  {
  \ 'depends' : 'Shougo/vimproc',
  \ 'autoload' : {
  \   'commands' : [{ 'name' : 'VimShell',  'complete' : 'customlist, vimshell#complete'},
  \                 'VimShellExecute',  'VimShellInteractive',
  \                 'VimShellTerminal',  'VimShellPop'],
  \   'mappings' : ['<Plug>(vimshell_switch)']
  \ }}

" ヤンク履歴を保持
NeoBundle 'LeafCage/yankround.vim'

" ファイルビューア
NeoBundleLazy 'Shougo/vimfiler',  {
  \ 'depends' : ["Shougo/unite.vim"],
  \ 'autoload' : {
  \   'commands' : [ "VimFilerTab",  "VimFiler",  "VimFilerExplorer",  "VimFilerBufferDir" ],
  \   'mappings' : ['<Plug>(vimfiler_switch)'],
  \   'explorer' : 1,
  \ }}

" 括弧を自動的に閉じる
NeoBundle 'Townk/vim-autoclose'

" ifなどの終了宣言を自動で挿入
NeoBundleLazy 'tpope/vim-endwise',  {
  \ 'autoload' : { 'insert' : 1, }}

" 超高速で簡単な移動
NeoBundle 'Lokaltog/vim-easymotion'

" 文章整形
NeoBundleLazy 'junegunn/vim-easy-align',  {
  \ 'autoload': {
  \   'commands' : ['EasyAlign'],
  \   'mappings' : ['<Plug>(EasyAlign)'],
  \ }}

" true/false切り替え
NeoBundle 'AndrewRadev/switch.vim'

" テキストを囲みや括弧のカーソル移動機能を拡張
NeoBundle 'tpope/vim-surround'

" vimから実行
"NeoBundleLazy 'thinca/vim-quickrun',  {
"  \ 'autoload' : {
"  \   'mappings' : [['n',  '\r']],
"  \   'commands' : ['QuickRun']
"  \ }}

" HTMLのタグを一瞬で入力
NeoBundleLazy 'mattn/emmet-vim',  {
  \ 'autoload' : {
  \   'filetypes' : ['html',  'html5',  'eruby',  'jsp',  'xml',  'css',  'scss',  'coffee'],
  \   'commands' : ['<Plug>ZenCodingExpandNormal']
  \ }}

" ディレクトリをツリー表示
NeoBundle 'scrooloose/nerdtree'

" vimでgit操作
NeoBundle 'jreybert/vimagit'
NeoBundle 'tpope/vim-fugitive',

" rails
NeoBundle 'tpope/vim-rails',  { 'autoload' : {
      \ 'filetypes' : ['haml',  'ruby',  'eruby'] }}

NeoBundle "kana/vim-smartinput"
NeoBundle "cohama/vim-smartinput-endwise"

NeoBundle "vim-scripts/ruby-matchit"

NeoBundleLazy 'basyura/unite-rails',  {
      \ 'depends' : 'Shougo/unite.vim',
      \ 'autoload' : {
      \   'unite_sources' : [
      \     'rails/bundle',  'rails/bundled_gem',  'rails/config',
      \     'rails/controller',  'rails/db',  'rails/destroy',  'rails/features',
      \     'rails/gem',  'rails/gemfile',  'rails/generate',  'rails/git',  'rails/helper',
      \     'rails/heroku',  'rails/initializer',  'rails/javascript',  'rails/lib',  'rails/log',
      \     'rails/mailer',  'rails/model',  'rails/rake',  'rails/route',  'rails/schema',  'rails/spec',
      \     'rails/stylesheet',  'rails/view'
      \   ]
      \ }}

NeoBundle 'scrooloose/syntastic'

" ctags
NeoBundle 'szw/vim-tags'
"NeoBundle 'soramugi/auto-ctags.vim'

"NeoBundleLazy 'taka84u9/vim-ref-ri',  {
"      \ 'depends': ['Shougo/unite.vim',  'thinca/vim-ref'],
"      \ 'autoload': { 'filetypes': g:my.ft.ruby_files } }
"
"NeoBundleLazy 'alpaca-tc/neorspec.vim',  {
"      \ 'depends' : ['alpaca-tc/vim-rails',  'tpope/vim-dispatch'],
"      \ 'autoload' : {
"      \   'commands' : ['RSpec',  'RSpecAll',  'RSpecCurrent',  'RSpecNearest',  'RSpecRetry']
"      \ }}
"
"NeoBundleLazy 'alpaca-tc/alpaca_tags',  {
"      \ 'depends': 'Shougo/vimproc',
"      \ 'autoload' : {
"      \   'commands': ['TagsUpdate',  'TagsSet',  'TagsBundle']
"      \ }}
"
"NeoBundleLazy 'tsukkee/unite-tag',  {
"      \ 'depends' : ['Shougo/unite.vim'],
"      \ 'autoload' : {
"      \   'unite_sources' : ['tag',  'tag/file',  'tag/include']
"      \ }}

"" NERD_commenter.vim :最強コメント処理 (<Leader>c<space>でコメントをトグル)
"NeoBundle 'scrooloose/nerdcommenter.git'
"
"" 自動閉じタグ
"" NeoBundle 'yuroyoro/vim-autoclose'
"
"" -- でメソッドチェーン整形
"NeoBundle 'c9s/cascading.vim'
"
"" visually indent guide
"NeoBundle 'nathanaelkane/vim-indent-guides'
"
"" XMLとかHTMLとかの編集機能を強化する
"NeoBundle 'xmledit'
"
"" Align : 高機能整形・桁揃えプラグイン
"NeoBundle 'Align'
"
"" フィルタリングと整形
"NeoBundle 'godlygeek/tabular'
"
"" マルチバイト対応の整形
"NeoBundle 'h1mesuke/vim-alignta'
"
"" YankRing.vim : ヤンクの履歴を管理し、順々に参照、出力できるようにする
"" NeoBundle 'YankRing.vim'
"
"" undo履歴を追える (need python support)
"NeoBundle 'Gundo'
"
"" surround.vim : テキストを括弧で囲む／削除する
"NeoBundle 'tpope/vim-surround'
"
"" smartchr.vim : ==などの前後を整形
"NeoBundle 'smartchr'
"
"" vim-operator-user : 簡単にoperatorを定義できるようにする
"NeoBundle 'operator-user'
"
"" operator-camelize : camel-caseへの変換
"NeoBundle 'operator-camelize'
"
"" operator-replace : yankしたものでreplaceする
"NeoBundle 'operator-replace'
"
"" textobj-user : 簡単にVimエディタのテキストオブジェクトをつくれる
"NeoBundle 'textobj-user'
"
"" vim-textobj-syntax : syntax hilightされたものをtext-objectに
"NeoBundle 'kana/vim-textobj-syntax.git'
"
"" vim-textobj-plugins : いろんなものをtext-objectにする
"NeoBundle 'thinca/vim-textobj-plugins.git'
"
"" vim-textobj-lastpat : 最後に検索されたパターンをtext-objectに
"NeoBundle 'kana/vim-textobj-lastpat.git'
"
"" vim-textobj-indent : インデントされたものをtext-objectに
"NeoBundle 'kana/vim-textobj-indent.git'
"
"" vim-textobj-function : 関数の中身をtext-objectに
"" NeoBundle 'kana/vim-textobj-function.git'
"
"" vim-textobj-fold : 折りたたまれたアレをtext-objectに
"" NeoBundle 'kana/vim-textobj-fold.git'
"NeoBundle 'textobj-rubyblock'
"
"" vim-textobj-entire : buffer全体をtext-objectに
"NeoBundle 'textobj-entire'
"
"" 「foo」 or 【bar】などをtext-objectに
"NeoBundle 'textobj-jabraces'
"
"" 改造したmonday.vim(git rebase -i とかtrue/falseとか)
"" NeoBundle 'yuroyoro/monday'
"
"" <C-a>でtrue/false切替。他色々
"NeoBundle 'taku-o/vim-toggle'
"
"}}}


"Searching/Moving{{{
"" smooth_scroll.vim : スクロールを賢く
"" NeoBundle 'Smooth-Scroll'
"NeoBundle 'yuroyoro/smooth_scroll.vim'
"
"" vim-smartword : 単語移動がスマートな感じで
"NeoBundle 'smartword'
"
"" camelcasemotion : CamelCaseやsnake_case単位でのワード移動
"NeoBundle 'camelcasemotion'
"
"" <Leader><Leader>w/fなどで、motion先をhilightする
"NeoBundle 'EasyMotion'
"
"" matchit.vim : 「%」による対応括弧へのカーソル移動機能を拡張
"NeoBundle 'matchit.zip'
"
"" ruby用のmatchit拡張
"NeoBundle 'ruby-matchit'
"
"" grep.vim : 外部のgrep利用。:Grepで対話形式でgrep :Rgrepは再帰
"NeoBundle 'grep.vim'
"
"" eregex.vim : vimの正規表現をrubyやperlの正規表現な入力でできる :%S/perlregex/
"NeoBundle 'eregex.vim'
"
"" open-browser.vim : カーソルの下のURLを開くor単語を検索エンジンで検索
"NeoBundle 'tyru/open-browser.vim'
"
"" VimからThe Silver Searcherを利用する
""  http://blog.glidenote.com/blog/2013/02/28/the-silver-searcher-better-than-ack/
"NeoBundle 'rking/ag.vim'
"}}}
"
"Programming {{{
"" quickrun.vim : 編集中のファイルを簡単に実行できるプラグイン
"NeoBundle 'thinca/vim-quickrun'
"
"" perldocやphpmanual等のリファレンスをvim上で見る
"NeoBundle 'thinca/vim-ref'
"
"" SQLUtilities : SQL整形、生成ユーティリティ
"NeoBundle 'SQLUtilities'
"
"" vim-ruby : VimでRubyを扱う際の最も基本的な拡張機能
"NeoBundle 'vim-ruby/vim-ruby'
"
"" rails.vim : rails的なアレ
"NeoBundle 'tpope/vim-rails'
"
"" Pydiction : Python用の入力補完
"NeoBundle 'Pydiction'
"
"" ソースコード上のメソッド宣言、変数宣言の一覧を表示
"NeoBundle 'taglist.vim'
"
"" エラーがある場所をhilight
"NeoBundle 'errormarker.vim'
"
"" GOPATHから検索
"NeoBundle 'koron/vim-gosrc'
"
"" tagsを利用したソースコード閲覧・移動補助機能 tagsファイルの自動生成
"" NeoBundle 'Source-Explorer-srcexpl.vim'
"
"" NERD_tree, taglist, srcexpl の統合
"" NeoBundle 'trinity.vim'
"
"}}}
"
"Syntax {{{
" haml
NeoBundle 'haml.zip'

" JavaScript
" NeoBundle 'JavaScript-syntax'
NeoBundle 'pangloss/vim-javascript'

" jQuery
NeoBundle 'jQuery'

" nginx conf
NeoBundle 'nginx.vim'

" markdown
NeoBundle 'tpope/vim-markdown'

" coffee script
NeoBundle 'kchmck/vim-coffee-script'

" python
NeoBundle 'yuroyoro/vim-python'

" scala
NeoBundle 'yuroyoro/vim-scala'

" clojure
NeoBundle 'jondistad/vimclojure'

" ghc-mod
NeoBundle 'eagletmt/ghcmod-vim'

" jsx
NeoBundle 'mxw/vim-jsx'

" TypeScript
NeoBundle 'leafgarland/typescript-vim'

" syntax checking plugins exist for eruby, haml, html, javascript, php, python, ruby and sass.
"NeoBundle 'scrooloose/syntastic'

" Elixir
NeoBundle 'elixir-lang/vim-elixir'

" Go (golang) support for Vim (enhanced bundled vim)
NeoBundle 'fatih/vim-go'

"}}}
"
"Buffer {{{
"" DumbBuf.vim : quickbufっぽくbufferを管理。 "<Leader>b<Space>でBufferList
"NeoBundle 'DumbBuf'
"
"" minibufexpl.vim : タブエディタ風にバッファ管理ウィンドウを表示
"" NeoBundle 'minibufexpl.vim'
"NeoBundle 'fholgado/minibufexpl.vim'
"
"" NERDTree : ツリー型エクスプローラ
"NeoBundle 'The-NERD-tree'
"
"" vtreeexplorer.vim : ツリー状にファイルやディレクトリの一覧を表示
"NeoBundle 'vtreeexplorer'
"}}}
"
"
"Encording {{{
"NeoBundle 'banyan/recognize_charcode.vim'
"}}}
"
"Utility {{{
"
"" vim-altercmd : Ex command拡張
"NeoBundle 'tyru/vim-altercmd'
"
"" vim Interface to Web API
"NeoBundle 'mattn/webapi-vim'
"
"" cecutil.vim : 他のpluginのためのutillity1
"NeoBundle 'cecutil'
"
"" urilib.vim : vim scriptからURLを扱うライブラリ
"NeoBundle 'tyru/urilib.vim'
"
"" ステータスラインに顔文字を表示
"" NeoBundle 'mattn/hahhah-vim'
"
"" utillity
"NeoBundle 'L9'
"
"" Buffer管理のLibrary
"NeoBundle 'thinca/vim-openbuf'
"
"" vimdoc 日本語
"NeoBundle 'yuroyoro/vimdoc_ja'
"
"" vim上のtwitter client
"" NeoBundle 'TwitVim'
"
"" Lingrのclient
"NeoBundle 'tsukkee/lingr-vim'
"
"" vimからGit操作する
"NeoBundle 'tpope/vim-fugitive'
"
"" Redmine on Vim
"NeoBundle 'mattn/vim-metarw-redmine'
"
"" A framework to read/write fake:path
"NeoBundle 'kana/vim-metarw'
"
"" shows a git diff in the 'gutter' (sign column)
"NeoBundle 'airblade/vim-gitgutter'
"
"" git-vim: Plugin files for calling git functions from inside Vim and Syntax files for git displays
"NeoBundle 'motemen/git-vim'
"
"" Create your own submodes
"" 任意キーでサブモードを作れる
"" http://d.hatena.ne.jp/thinca/20130131/1359567419
"NeoBundle 'kana/vim-submode'
"}}}
"
"ColorSchema{{{{
"" color schema 256
"NeoBundle 'desert256.vim'
"NeoBundle 'mrkn256.vim'
"NeoBundle 'tomasr/molokai'
"}}}

call neobundle#end()

filetype plugin indent on

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck
